commands:
  common:
    - command: git --version
      name: Git version

    - command: gcc --version
      name: GCC version

    - command: clang --version
      name: LLVM version

    - command: rvm list
      name: Pre-installed Ruby versions
      pipe: env GREP_COLORS='mt=01;32' egrep -o '(j?ruby|rbx|ree)-[^ ]+' | sort | uniq

    - command: nvm list
      name: Pre-installed Node.js versions
      pipe: env GREP_COLORS='mt=01;32' egrep -o '(iojs-)?v[0-9\.]+' | sort | uniq

    - command: gimme -l
      name: Pre-installed Go versions

    - command: mysqld --version
      name: MySQL version

    - command: postgres --version
      name: PostgreSQL version

    - command: redis-server --version
      name: Redis version
      pipe: perl -n -e '/v=([\d\.]+)/ && {print "redis-server $1\n"}'

    - riak version

    - command: mongod --version
      name: MongoDB version
      pipe: perl -n -e '/version v(.*)$/ && { print "MongoDB $1\n" }'

    - command: couchdb -V
      name: CouchDB version
      pipe: perl -n -e '/CouchDB ([\d\.]+)/ && {print "couchdb $1\n"}'

    - pre: service neo4j restart
      name: Neo4j version
      port: 7474
      command: "wget -O- http://localhost:7474/db/data 2>/dev/null"
      pipe: perl -ne '/neo4j_version.*?([0-9\.]+)/ && print $1'
      post: service neo4j stop

    - pre: sudo service cassandra restart
      name: Cassandra version
      port: 9042
      command: /usr/local/cassandra/bin/nodetool version
      pipe: perl -ne '/ReleaseVersion.*?([0-9\.]+)/ && print $1'
      post: sudo service cassandra stop; sudo rm -rf /var/lib/cassandra/*"

    - pre: sudo service rabbitmq-server restart
      name: RabbitMQ Version
      port: 5672
      command: sudo rabbitmqctl status
      pipe: "awk -F \\\" '/\\\"RabbitMQ\\\"/ {print $4}' "
      post: sudo service rabbitmq-server stop >/dev/null

    - pre: sudo service elasticsearch restart
      name: ElasticSearch version
      port: 9200
      command: curl -XGET localhost:9200 2>/dev/null
      pipe: awk -F \" '/number/ {print $4}'
      post: sudo service elasticsearch stop >/dev/null

    - command: ls -lad /usr/local/sphinx-*
      name: Installed Sphinx versions
      pipe: perl -n -e '/sphinx-([^\/]+)/ && {print "$1"}'

    - command: ls -l /usr/local/bin/searchd
      name: Default Sphinx version
      pipe: perl -n -e '/sphinx-([^\/]+)/ && {print "$1\n"}'

    - command: ls -d /usr/local/firefox-*
      name: Installed Firefox version
      pipe: awk -F- '{print "firefox", $2}'

    - command: /usr/local/phantomjs/bin/phantomjs --version
      name: PhantomJS version

    # Android
    - command: grep Pkg.Revision /usr/local/android-sdk/tools/source.properties
      name: Android SDK Tools Version
      pipe: awk -F= '{ print $2 }'
    - command: android list sdk --no-ui --all --extended
      name: List of Android SDK components that can be specified in .travis.yml
      pipe: awk -F\" '/^id/ {print $2}' | sort
    - command: which android && echo -e "\033[33;1mSee http://docs.travis-ci.com/user/languages/android/#How-to-install-Android-SDK-components\033[0m"
    - command: ant -version
    - command: mvn -version
    - command: gradle -version

    # Erlang
    - command: kerl list installations
    - command: kiex list
    - command: rebar --version

    # Go
    # has nothing special to run

    # Haskell
    - command: ls -l /usr/local/ghc

    # JVM
    - command: lein1 version
    - command: lein2 version
    - command: lein version

    # Node.js
    # has nothing special to run

    # Perl
    - command: perlbrew list

    # PHP
    - command: phpenv versions
    - command: composer --version

    # Python
    # - command: ls -l ~/virtualenv
    # - command: python --version
    # - command: python -c 'import sysconfig; print sysconfig.get_config_vars()'
    # - command: 'for p in virtualenv/*.*.*; do echo; source $p/bin/activate; python --version; pip list; done'

    # Ruby
    # has nothing special to run

  linux:
    - command: date
      name: Build image provisioning date and time

    - command: lsb_release -a
      name: Operating System Details
    - command: uname -r
      name: Linux Version

    # - command: COLUMNS=200 dpkg --list
    #   name:    Local Packages (via APT)
    #   pipe:    awk '/^ii/ {print $2, $3}'

  osx:
    - command: date
      name: Build image provisioning date and time

    - command: sw_vers
      name: Operating System Details
    - command: uname -r
      name: Darwin Version

    # - command: brew ls --versions
    #   name:    Local Packages (via Homebrew)
    #   pipe:    awk '{print $1, $NF}'
